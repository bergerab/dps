* Data Processing System (DPS)

A system for doing point-wise and windowed calculations on data
collected from external systems. There are several components to the system.

First there is the DPS UI which is a user interface for creating batch processes.
The UI is controlled via a backend server called DPS Manager. This stores metadata
about the system (which batch processes are running, their status, etc...). This backend
is currently under development.

There is the DPS Database Manager which is a micro-service which provides an interface between
time-series databases and the rest of the system. It provides functions for fetching signal data, 
and inserting signal data.

The DPS Manager and DPS Database Manager are found in the ~dps_services~ directory.

There is a client API for sending data to a DPS Manager in the ~dps_client~ directory.

There is a Python package for running integration tests on the system in the ~dps_test~ directory.

UWM specific implementations are in the ~uwm~ directory. This includes an implementation of a 
DPS Database Manager, and a server for integrating LabVIEW with the system.

KPI computations are implemented in the ~kpi-stream~ directory. All of the KPIs are found in ~kpi-stream/src/kpi.py~.
This folder includes Typhoon models for simulating electrical systems (in the ~typhoon~ directory), and Grafana dashboards
in the ~grafana~ directory. There is a web-server included in the ~src~ directory for starting Typhoon simulations, KPI 
stream processing, and running batch processes. This web-server was the first PoC of the DPS UI, and will no longer be used; 
however, the code remains here just in case.

All directories (Python packages) have unit tests that verify the implementation is correct. They can be run by calling:

#+BEGIN_SRC shell
python3 setup.py test
#+END_SRC

In a directory that has a ~setup.py~ file.
