* Data Processing System (DPS)

A system for doing point-wise and windowed calculations on data
collected from external systems.

This repository includes several isolated modules. First there is
~DPLang~ which implements a library and domain specific language (DSL) for
expressing data processing computations. Then, there is ~HQ~ 
which is the system's primary server. It holds configuration
for the system such as inputs and constants, controls different
clusters, is the target for the ~DPS API~.

~DAPI~ is a client API for sending signal data to the system.
~DPQ~ is a message queue cluster for stream processing of signals.
~DPB~ is a historical computation cluster for mass processing of signals.

** DPL
DPL is a library of data processing functions and a domain specific language (DSL)
which is used to express point-wise and windowed computations for both
streaming and batch processing.

For example, a (point-wise) power computation could be expressed as:
#+BEGIN_SRC python
I * V
#+END_SRC

An averaging function (windowed) could be expressed as:
#+BEGIN_SRC python
average(window(V, '1s', '1s'))
#+END_SRC
That is, for every second of data, the average is computed over that
second.

There are a few builtin keywords for specific computations. Such as
THD:
#+BEGIN_SRC python
thd(V, '2s')
#+END_SRC
Which computes the total harmonic distortion (THD) of a voltage signal
V over a 2 second window.

*** Case Insensitivity
All identifiers in DPLang are insensitive to case. That means that ~Va~
is the same as ~VA~ which is the same as ~va~. It was designed this way to
avoid confusion caused by differing naming conventions between the
programmers and electrical engineers. For example, it might
be a convention in the electrical modeling software to have all
uppercase names ~VA~, but in code to have title case ~Va~.

* Generating the documentation
~pdoc~ is used to generate the documentation for the modules in this
repo.

To re-generate the documentation, first install ~pdoc3~:

#+BEGIN_SRC shell
pip3 install pdoc3
#+END_SRC

To generate the documentation, run:

#+BEGIN_SRC shell
pdoc --html <directory/module>
#+END_SRC
