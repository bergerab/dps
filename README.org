* Data Processing System (DPS)

** Installation

The installation process involves setting up four main components:
    1. DPS Manager
    2. DPS Database Manager (DBM)
    3. DPS Batch Processor (at least one)
    4. DPS UI (React web-interface)

For these instructions, all the steps require you are running on windows,
and have Python 3 installed. Note that some of the commands may vary slightly
between machines. For example, I use "python3" to specify the Python 3 executable.
But on some Windows systems the correct command might be "py" or "python".

*** Installing TimescaleDB
Before installing this software, you must first install TimescaleDB. I did this via
Docker (as instructed by the TimescaleDB website). Here is the command I used:

#+BEGIN_SRC shell
docker run -d --name timescaledb -p 5432:5432 -e POSTGRES_PASSWORD=password timescale/timescaledb:1.7.4-pg12
#+END_SRC

You will need to use these credentials (a password of "password"), and the same port (5432).

For more information on how to install TimescaleDB see: https://docs.timescale.com/latest/getting-started/installation/docker/installation-docker .

Now the schema for the database must be configured. You will find a schema file located at "./dps_database_manager/schema.sql".
Log-in to the TimescaleDB, and run the schema to setup the database. On docker, I ran:

#+BEGIN_SRC shell
psql postgres postgres
#+END_SRC

In a shell for my container. This opens a database connection using the user postgres, in the database postgres.

Copy the schema statement for statement.

*** Install supporting packages
DPS relies on your system having several shared packages installed. These are dplib, dps_services, and dps_client.
You can install them by running:

#+BEGIN_SRC 
cd dps_services/
pip3 install . --upgrade
cd ../dps_client
pip3 install . --upgrade
cd ../dplib
pip3 install . --upgrade
#+END_SRC

When the commands complete, you should have all three packages installed in your Python 3 environment.
You can test to see if it worked by starting a Python interpreter, and running:

#+BEGIN_SRC python
import dps_services
import dps_client
import dplib
#+END_SRC

If the imports succeed, the packages installed successfully.

*** DPS Database Manager Install
To install DBM, first open a terminal and change directory to the "dps_database_manager" directory:
#+BEGIN_SRC shell
cd dps_database_manager/
#+END_SRC

Then install the dependecies:

#+BEGIN_SRC 
python3 setup.py install
#+END_SRC

Then, to run the server, run:

#+BEGIN_SRC shell
python3 dps_database_manager/app.py
#+END_SRC

This will launch the server. You will need to keep this server online at all times while running the rest of the components.
The server will be hosted on http://localhost:3002/

*** DPS Manager

First, change directory (cd) into the "dps_manager" directory.

#+BEGIN_SRC shell
cd dps_manager/
#+END_SRC

Then, install the dependencies using `requirements.txt`:

#+BEGIN_SRC shell
pip3 install -r requirements.txt
#+END_SRC

Then run Django migrations by running:

#+BEGIN_SRC shell
python3 manage.py migrate
#+END_SRC

Now to run the development server, run:

#+BEGIN_SRC shell
set DBM_URL=http://localhost:3002
python3 manage.py runserver
#+END_SRC

(Note that the first command sets the URL for the Database Manager as an enviornment variable.)

The server will be hosted on http://localhost:8000/

*** DPS Batch Processor
Change directory to the "dps_batch_processor" directory:
#+BEGIN_SRC shell
cd dps_batch_processor/
#+END_SRC

Install the dependencies using pip:
#+BEGIN_SRC 
 pip install . --upgrade
#+END_SRC

Run the batch processor by running this command:
#+BEGIN_SRC shell
dps_batch_processor --dps-manager-url=http://localhost:8000/ 
                    --database-manager-url=http://localhost:3002 
                    --verbose=1 --max-batch-size=100000
#+END_SRC

There is some configuration that can be done in this command to optimize batch process speed,
such as changing the max-batch-size. If you are looking for higher speeds, it might be benefitial to
make the batch size larger. However, this is enough for your first setup.

Note that you may run this command on more processes at the same time to run batch processes in parallel.

*** DPS UI
The user interface is written in JavaScript (React), and can be run via Yarn. First make sure you have Yarn installed
(see here https://classic.yarnpkg.com/en/docs/cli/install/ ). You will also need NodeJS (https://nodejs.org/en/).
Once you have installed those, run:

#+BEGIN_SRC shell
cd dps_ui/
yarn install
yarn start
#+END_SRC

This should install the JavaScript dependeices, and start the user interface. Currently the user interface requires
the DPS Manager server to be running at http://localhost:8000/ . So it is important to ensure DPS Manager is online, 
and running on port 8000. Also, make sure the Database Manager is running, along with at least one DPS Batch Processor.
All of these components must be online all at once.

Now, you can go to http://localhost:3005/ in a web browser to view the system. Use the drawer on the left to navigate.

** Updating
Whenever some component changes, you should pull the new code from the repository (git pull), repeat the steps from 
"Install supporting packages", and then restart all of the components (DPS Manager, DPS Database Manager, DPS Batch Processor,
the DPS UI).
