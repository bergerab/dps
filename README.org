* Data Processing System (DPS)

A system for doing point-wise and windowed calculations on data
collected from external systems. 

#+html: <p align="center"><img src="img/architecture.png" /></p>

The architecture includes a primary
server called the ~DPS Manager~ where devices and signals are
configured. The data processing computations are expressed in a custom
language in the user interface of ~DPS Manager~. Devices send signal values into
DPS via the API ~DPS Client~. Then, ~DPS Manager~ processes them via its
~DPS Worker~ server cluster. The processed data is then visualized in
the ~DPS UI~ (the user interface for the system).

This repository includes several isolated modules. All of the source
code is found in the ~./src~ directory. Code documentation is found in
~./html~. Images relevant to README files is found in ~./img~. Below is a
overview of the various modules in the source code directory:

First there is ~dplib~ which implements a library for
expressing data processing computations. Then, there is ~minipy~, a
small domain specific language which can be intergrated with ~dplib~ to
allow for administrators do express data processing computations in a
safe way. This is the language exposed in the ~DPS Manager~ UI when
specifying data processing computations.

Then, there is ~dps_manager~ which is the system's primary server. It holds configuration
for the system such as inputs and constants, controls different
clusters, is the target for the ~dps_client~. The ~dps_manager~ server
uses worker servers found in ~dps_worker~ to perform data processing
tasks. 

The ~dps_client~ is a client API for sending signal data to the system,
which connects to the ~dps_manager~, and sends signal data to a
~dps_worker~ where it is then processed and stored in a database
(governed by the configuration some administator setup in the
~dps_manager~).

Each module in this project has its own ~README.org~ file which serves
as the documentation. The entire project will have a documentation
page of its own in ~./docs~, when the project is complete.
