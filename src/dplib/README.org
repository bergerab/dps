* DPLib
~DPLib~ is a library of data processing functions which can compute
point-wise and windowed computations. The library can be used on
batches of data to perform historical analysis of data, as well as
perform stream processing (provided the stream is buffered into batches).

~DPLib~ provides one abstraction which wraps a list of samples (absolute-time-bound
values) called a ~DataSeries~. ~DataSeries~ objects are where all the
computations take place. The interface to ~DataSeries~ is designed to
feel native to Python 
by overloading common operators. 

For example, a (point-wise) power computation could be expressed as:
#+BEGIN_SRC python
I = DataSeries(...) 
V = DataSeries(...)
P = I * V
#+END_SRC

An averaging function (windowed) could be expressed as:
#+BEGIN_SRC python
V = DataSeries(...)
window = V.time_window(timedelta(seconds=1), stride=timedelta(seconds=1))
V_averaged = window.average()
#+END_SRC
That is, for every second of data, the average is computed over that
second.

There are a few builtin functions for specific computations. Such as
THD:
#+BEGIN_SRC python
V = DataSeries(...)
THD = V.thd(timedelta(seconds=2))
#+END_SRC
Which computes the total harmonic distortion (THD) of a voltage signal
V over a 2 second window.

* Running the Tests
To run the tests, run:

#+BEGIN_SRC shell
python3 setup.py test
#+END_SRC
