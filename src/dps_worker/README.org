** DPS Worker
~DPS Worker~ is a clusterable server which actually performs the data
processing computations. It is controlled by a ~DPS Worker Queue~  server. For data collection and streaming processes, data is sent
and processed directly by a ~DPS Worker~ and into the time series database.

** Problems
*** Historical and Stream Processing
How to use this for both historical and stream processing?

*** Distributing Computation
If we are supporting stream processing, how do we distribute the processing?
- What if two computations needs the same signal?
  - Example: ~Va~ could be used for a power computation and a THD computation.

Solution:
There is an assignment step:
The first worker is assigned all the KPIs.
The next worker is assigned 1/n of the KPIs (where n is the number of workers).

Every time a change to the system takes place (a worker is added or leaves), the assignment steps repeat.

A worker leaves the cluster when it stops reporting a heartbeat. At
that point the KPIs it was assigned are given to the other workers.

Every time a signal is needed for a qualified computation, it should be
duplicated in Redis. For example, if there is a Power computation
(Voltage * Current) and a THD for voltage and a THD for current,
duplicate the voltage signal 3 times and organize them based off why
what they are for. 1 copy would be for the power, another for THD
voltage, and another for the raw signal. As soon as the sample is
used, it should be removed from Redis.

Then the last question is how do we make sure two nodes are not trying
to compute the same qualified computation? For that we need the DPS Manager to
store a mapping from DPS Worker UID (given at registeration) to
qualified computations. 

*** Dependent Computations
What if one computation relies on another?
- Example: ~Efficiency~ vs ~Max Efficiency~ where ~Max Efficiency~ is just
  the maximum ~Efficiency~ over a moving 4 second window. This isn't a
  problem just leads to slightly repeated code.
- Better Example: for THD at load percentages we need to say "what is
  THD at 50% load", and we don't want to re-compute THD.
  - Can we call that a different case? Not a pointwise and not a
    windowed KPI. It is something else. It doesn't produce a stream of
    values, it produces a single value. It is kind of an
    aggregator. Two types of streaming computations: pointwise and
    windowed. Another one is weighted efficiency.

#+BEGIN_SRC python
[]
#+END_SRC


* Computation Types
** Processors
Turn a stream of input values into a stream of output values.

Uses DataSeries.

** Aggregators
Turn a stream of input values into a single output value.

The average voltage value:
#+BEGIN_SRC python
average(V)
#+END_SRC

Notice how that is different than the `Processor` equivalent. With
`Processor` you would have to window the signal first then average on
the windows (do we have to make these separate?).

#+BEGIN_SRC python

    
#+END_SRC

** What is the output of a batch process?

